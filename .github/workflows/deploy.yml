name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run build test
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to VPS
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "
          cd /opt/dashboard-iptv &&
          git pull origin main &&
          cp .env.production .env &&
          docker-compose down &&
          docker-compose build --no-cache &&
          docker-compose up -d &&
          docker system prune -f
        "
    
    - name: Verify deployment
      run: |
        sleep 30
        curl -f https://${{ secrets.DOMAIN }}/api/health || exit 1
    
    - name: Notify success
      if: success()
      run: |
        echo "✅ Deploy realizado com sucesso!"
        # Aqui você pode adicionar notificações via webhook, Slack, etc.
    
    - name: Notify failure
      if: failure()
      run: |
        echo "❌ Deploy falhou!"
        # Aqui você pode adicionar notificações de erro 